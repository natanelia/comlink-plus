name: CI & Publish

on:
  push:
    branches: ["main", "master"]
    tags: ["v*"]
  pull_request:
    branches: ["*"]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install dependencies
        run: bun install --frozen-lockfile
      - name: Lint comlink-worker-pool
        run: bun run --filter comlink-worker-pool lint
      - name: Lint comlink-worker-pool-react
        run: bun run --filter comlink-worker-pool-react lint

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install dependencies
        run: bun install --frozen-lockfile
      - name: Build comlink-worker-pool
        run: bun run --filter comlink-worker-pool build
      - name: Test comlink-worker-pool
        run: bun run --filter comlink-worker-pool test
      - name: Test comlink-worker-pool-react
        run: bun run --filter comlink-worker-pool-react test

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install dependencies
        run: bun install --frozen-lockfile
      - name: Build comlink-worker-pool
        run: bun run --filter comlink-worker-pool build
      - name: Build comlink-worker-pool-react
        run: bun run --filter comlink-worker-pool-react build

  publish:
    needs: build
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install dependencies
        run: bun install --frozen-lockfile
      - name: Build comlink-worker-pool
        run: bun run --filter comlink-worker-pool build
      - name: Build comlink-worker-pool-react
        run: bun run --filter comlink-worker-pool-react build
      - name: Publish packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          for pkg in packages/*; do
            if [ -f "$pkg/package.json" ]; then
              PRIVATE=$(jq -r '.private' "$pkg/package.json")
              VERSION=$(jq -r '.version' "$pkg/package.json")
              NAME=$(jq -r '.name' "$pkg/package.json")
              if [ "$PRIVATE" != "true" ]; then
                if npm view "$NAME@$VERSION" > /dev/null 2>&1; then
                  echo "$NAME@$VERSION already published"
                else
                  cd "$pkg"
                  npm publish --access public --provenance || echo "Not published: $pkg"
                  cd -
                fi
              fi
            fi
          done
